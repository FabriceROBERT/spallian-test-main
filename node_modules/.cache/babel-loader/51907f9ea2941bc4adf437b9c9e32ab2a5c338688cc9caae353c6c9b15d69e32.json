{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nconst GetPoke = () => {\n  _s();\n  const [pokeData, setPokeData] = useState([]);\n  const [pokeDex, setPokeDex] = useState();\n\n  // That's how i request the api from pokeapi.com\n  const getPokemon = async res => {\n    const newData = await Promise.all(res.map(async item => {\n      const result = await axios.get(item.url);\n      console.log(result);\n      return result.data;\n    }));\n    setPokeData(state => {\n      const combinedData = [...state, ...newData];\n      const uniqueData = Array.from(new Set(combinedData.map(pokemon => pokemon.id))).map(id => {\n        return combinedData.find(pokemon => pokemon.id === id);\n      });\n      uniqueData.sort((a, b) => a.id > b.id ? 1 : -1);\n      return uniqueData;\n    });\n  };\n  useEffect(() => {\n    pokeFetch();\n  }, [url]);\n};\n_s(GetPoke, \"K/VcJNVNxv2RyfsPzIZG5+YOG1U=\");\n_c = GetPoke;\nexport default GetPoke;\nvar _c;\n$RefreshReg$(_c, \"GetPoke\");","map":{"version":3,"names":["React","GetPoke","_s","pokeData","setPokeData","useState","pokeDex","setPokeDex","getPokemon","res","newData","Promise","all","map","item","result","axios","get","url","console","log","data","state","combinedData","uniqueData","Array","from","Set","pokemon","id","find","sort","a","b","useEffect","pokeFetch","_c","$RefreshReg$"],"sources":["C:/Users/fabri/Downloads/spallian-test-main/spallian-test-main/src/components/GetPoke.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst GetPoke = () => {\r\n  const [pokeData, setPokeData] = useState([]);\r\n    const [pokeDex, setPokeDex] = useState();\r\n    \r\n\r\n  // That's how i request the api from pokeapi.com\r\n  const getPokemon = async (res) => {\r\n    const newData = await Promise.all(\r\n      res.map(async (item) => {\r\n        const result = await axios.get(item.url);\r\n        console.log(result);\r\n        return result.data;\r\n      })\r\n    );\r\n\r\n    setPokeData((state) => {\r\n      const combinedData = [...state, ...newData];\r\n      const uniqueData = Array.from(\r\n        new Set(combinedData.map((pokemon) => pokemon.id))\r\n      ).map((id) => {\r\n        return combinedData.find((pokemon) => pokemon.id === id);\r\n      });\r\n      uniqueData.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n      return uniqueData;\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    pokeFetch();\r\n  }, [url]);\r\n};\r\n\r\nexport default GetPoke;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,CAAC;;EAG1C;EACA,MAAMG,UAAU,GAAG,MAAOC,GAAG,IAAK;IAChC,MAAMC,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC/BH,GAAG,CAACI,GAAG,CAAC,MAAOC,IAAI,IAAK;MACtB,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAACC,GAAG,CAACH,IAAI,CAACI,GAAG,CAAC;MACxCC,OAAO,CAACC,GAAG,CAACL,MAAM,CAAC;MACnB,OAAOA,MAAM,CAACM,IAAI;IACpB,CAAC,CACH,CAAC;IAEDjB,WAAW,CAAEkB,KAAK,IAAK;MACrB,MAAMC,YAAY,GAAG,CAAC,GAAGD,KAAK,EAAE,GAAGZ,OAAO,CAAC;MAC3C,MAAMc,UAAU,GAAGC,KAAK,CAACC,IAAI,CAC3B,IAAIC,GAAG,CAACJ,YAAY,CAACV,GAAG,CAAEe,OAAO,IAAKA,OAAO,CAACC,EAAE,CAAC,CACnD,CAAC,CAAChB,GAAG,CAAEgB,EAAE,IAAK;QACZ,OAAON,YAAY,CAACO,IAAI,CAAEF,OAAO,IAAKA,OAAO,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC1D,CAAC,CAAC;MACFL,UAAU,CAACO,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAMD,CAAC,CAACH,EAAE,GAAGI,CAAC,CAACJ,EAAE,GAAG,CAAC,GAAG,CAAC,CAAE,CAAC;MACjD,OAAOL,UAAU;IACnB,CAAC,CAAC;EACJ,CAAC;EACDU,SAAS,CAAC,MAAM;IACdC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACjB,GAAG,CAAC,CAAC;AACX,CAAC;AAAChB,EAAA,CA7BID,OAAO;AAAAmC,EAAA,GAAPnC,OAAO;AA+Bb,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}